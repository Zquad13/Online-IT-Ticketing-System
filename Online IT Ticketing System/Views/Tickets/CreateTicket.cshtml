@model TicketModel

<div class="container my-5">
    <h1 class="text-center mb-4">Create a New Ticket</h1>

    <form asp-action="CreateTicket" method="post" enctype="multipart/form-data" id="ticketForm">
        <input type="hidden" id="UserName" name="UserName" value="@Model.UserName" />

        <!-- Topic Input -->
        <div class="form-group">
            <label for="Topic" class="font-weight-bold">Topic:</label>
            <input type="text" id="Topic" name="Topic" class="form-control" value="@Model.Topic" placeholder="Enter the topic of the ticket" />
            <span class="text-danger error-message" id="TopicError"></span>
        </div>

        <!-- Subject Input -->
        <div class="form-group">
            <label for="Subject" class="font-weight-bold">Subject:</label>
            <textarea id="Subject" name="Subject" class="form-control" rows="4" placeholder="Provide a brief subject for the ticket">@Model.Subject</textarea>
            <span class="text-danger error-message" id="SubjectError"></span>
        </div>

        <!-- Category Dropdown -->
        <div class="form-group">
            <label for="Category" class="font-weight-bold">Category:</label>
            <select id="Category" name="Category" class="form-control">
                <option value="">Select a category</option>
                <option value="Hardware">Hardware</option>
                <option value="Software">Software</option>
                <option value="SystemAdmin">System Administration</option>
            </select>
        </div>

        <!-- Attachment Input -->
        <div class="form-group">
            <label for="AttachmentPath" class="font-weight-bold">Upload Attachment (Optional):</label>
            <input type="file" id="AttachmentPath" name="AttachmentPath" class="form-control-file" accept="image/*" />
            @if (Model.AttachmentData != null)
            {
                string base64Image = Convert.ToBase64String(Model.AttachmentData);
                <div class="mt-3">
                    <img src="data:image/png;base64,@base64Image" alt="Attachment" class="img-thumbnail" style="max-width: 200px;" />
                </div>
            }
        </div>

        <div class="d-flex justify-content-between mt-4">
            <button type="submit" class="btn btn-primary btn-lg">Create Ticket</button>
            <a class="btn btn-outline-primary btn-lg" href="@Url.Action("MyTickets", "Tickets")">My Tickets</a>
        </div>
    </form>
</div>

<!-- Custom Styles -->
<style>
    .error-message {
        font-size: 0.9rem;
        margin-top: 0.25rem;
        display: block;
    }

    .is-invalid {
        border-color: #dc3545 !important;
        background-image: none !important;
        box-shadow: none !important;
    }
</style>

<!-- jQuery for Real-Time Validation -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $("#ticketForm").on("submit", function (e) {
            let isValid = true;

            // Validate Topic
            const topic = $("#Topic").val().trim();
            if (topic === "") {
                $("#Topic").addClass("is-invalid");
                $("#TopicError").text("Topic is required.");
                isValid = false;
            } else {
                $("#Topic").removeClass("is-invalid");
                $("#TopicError").text("");
            }

            // Validate Subject
            const subject = $("#Subject").val().trim();
            if (subject === "") {
                $("#Subject").addClass("is-invalid");
                $("#SubjectError").text("Subject is required.");
                isValid = false;
            } else {
                $("#Subject").removeClass("is-invalid");
                $("#SubjectError").text("");
            }

            // Stop form submission if validation fails
            if (!isValid) {
                e.preventDefault();
            }
        });

        // Real-time validation for Topic
        $("#Topic").on("input", function () {
            const topic = $(this).val().trim();
            if (topic === "") {
                $(this).addClass("is-invalid");
                $("#TopicError").text("Topic is required.");
            } else {
                $(this).removeClass("is-invalid");
                $("#TopicError").text("");
            }
        });

        // Real-time validation for Subject
        $("#Subject").on("input", function () {
            const subject = $(this).val().trim();
            if (subject === "") {
                $(this).addClass("is-invalid");
                $("#SubjectError").text("Subject is required.");
            } else {
                $(this).removeClass("is-invalid");
                $("#SubjectError").text("");
            }
        });
    });
</script>
