@model List<TicketModel>
<style>
    .custom-modal {
        display: none;
        position: fixed;
        z-index: 1050;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.7);
    }

    /* Modal content */
    .custom-modal-content {
        margin: 10% auto;
        padding: 20px;
        background: #fff;
        border-radius: 8px;
        max-width: 80%;
        position: relative;
        text-align: center;
    }

    /* Close button */
    .custom-close {
        position: absolute;
        top: 10px;
        right: 15px;
        color: #000;
        font-size: 24px;
        font-weight: bold;
        cursor: pointer;
    }

        .custom-close:hover,
        .custom-close:focus {
            color: red;
            text-decoration: none;
            cursor: pointer;
        }

    .small-thumbnail {
        width: 100px;
        height: 100px;
        object-fit: cover; /* Ensures the image fits within the dimensions */
    }
</style>
<script>
    // Open the modal
    function openModal(modalId) {
        document.getElementById(modalId).style.display = "block";
    }

    // Close the modal
    function closeModal(modalId) {
        document.getElementById(modalId).style.display = "none";
    }
</script>

<div class="container my-5">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white text-center">

            <h2>Your Tickets</h2>
        </div>
        <div class="card-body">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover align-middle text-center">
                        <thead class="table-dark">
                            <tr>
                                <th scope="col">Ticket ID</th>
                                <th scope="col"> Topic</th>
                                <th scope="col">Subject</th>
                                <th scope="col">Category</th>
                                <th scope="col">Creation Date</th>
                                <th> Attachments</th>
                                <th scope="col">Status</th>
                                <th scope="col"> Messages</th>

                                
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var ticket in Model)
                            {
                                <tr>
                                    <td>@ticket.TicketId</td>
                                    <td>@ticket.Topic</td>
                                    <td>@ticket.Subject</td>
                                    <td>@ticket.Category</td>
                                    <td>@ticket.CreationDate.ToString("yyyy-MM-dd HH:mm")</td>

                                    <td>
                                        @if (ticket.AttachmentData != null)
                                        {
                                            string base64Image = Convert.ToBase64String(ticket.AttachmentData);
                                            <div>
                                                <!-- Display thumbnail -->
                                                <img src="data:image/png;base64,@base64Image" alt="Attachment" class="img-thumbnail small-thumbnail" style="cursor: pointer;" onclick="openModal('modal-@ticket.TicketId')" />

                                                <!-- Popup modal -->
                                                <div id="modal-@ticket.TicketId" class="custom-modal">
                                                    <div class="custom-modal-content">
                                                        <span class="custom-close" onclick="closeModal('modal-@ticket.TicketId')">&times;</span>
                                                        <img src="data:image/png;base64,@base64Image" alt="Attachment" class="img-fluid" />
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        else
                                        {
                                            <span>No Attachment</span>
                                        }
                                    </td>

                   
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(ticket.Status)">
                                            @ticket.Status
                                        </span>
                                    </td>
                                    <td>
                                        <!-- New Section to Display Messages -->
                                        <div class="messages">
                                            @foreach (var message in ticket.Messages)
                                            {
                                                <div>
                                                    <strong>@message.Message</strong>

                                                </div>
                                                <hr />
                                            }
                                        </div>
                                    </td>
                                   
                                    
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-warning text-center" role="alert">
                    <strong>No tickets found!</strong> You haven't registered any complaints yet.
                </div>
            }
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status.ToLower() switch
        {
            "open" => "bg-success",
            "in progress" => "bg-primary",
            "closed" => "bg-danger",
            _ => "bg-primary"
        };
    }
}
